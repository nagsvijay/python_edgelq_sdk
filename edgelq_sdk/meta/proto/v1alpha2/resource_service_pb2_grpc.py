# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
import warnings

from edgelq_sdk.meta.proto.v1alpha2 import resource_pb2 as edgelq__sdk_dot_meta_dot_proto_dot_v1alpha2_dot_resource__pb2
from edgelq_sdk.meta.proto.v1alpha2 import resource_service_pb2 as edgelq__sdk_dot_meta_dot_proto_dot_v1alpha2_dot_resource__service__pb2

GRPC_GENERATED_VERSION = '1.66.2'
GRPC_VERSION = grpc.__version__
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower
    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    raise RuntimeError(
        f'The grpc package installed is at version {GRPC_VERSION},'
        + f' but the generated code in edgelq_sdk/meta/proto/v1alpha2/resource_service_pb2_grpc.py depends on'
        + f' grpcio>={GRPC_GENERATED_VERSION}.'
        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
    )


class ResourceServiceStub(object):
    """Resource service API for Meta
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetResource = channel.unary_unary(
                '/ntt.meta.v1alpha2.ResourceService/GetResource',
                request_serializer=edgelq__sdk_dot_meta_dot_proto_dot_v1alpha2_dot_resource__service__pb2.GetResourceRequest.SerializeToString,
                response_deserializer=edgelq__sdk_dot_meta_dot_proto_dot_v1alpha2_dot_resource__pb2.Resource.FromString,
                _registered_method=True)
        self.BatchGetResources = channel.unary_unary(
                '/ntt.meta.v1alpha2.ResourceService/BatchGetResources',
                request_serializer=edgelq__sdk_dot_meta_dot_proto_dot_v1alpha2_dot_resource__service__pb2.BatchGetResourcesRequest.SerializeToString,
                response_deserializer=edgelq__sdk_dot_meta_dot_proto_dot_v1alpha2_dot_resource__service__pb2.BatchGetResourcesResponse.FromString,
                _registered_method=True)
        self.ListResources = channel.unary_unary(
                '/ntt.meta.v1alpha2.ResourceService/ListResources',
                request_serializer=edgelq__sdk_dot_meta_dot_proto_dot_v1alpha2_dot_resource__service__pb2.ListResourcesRequest.SerializeToString,
                response_deserializer=edgelq__sdk_dot_meta_dot_proto_dot_v1alpha2_dot_resource__service__pb2.ListResourcesResponse.FromString,
                _registered_method=True)
        self.WatchResource = channel.unary_stream(
                '/ntt.meta.v1alpha2.ResourceService/WatchResource',
                request_serializer=edgelq__sdk_dot_meta_dot_proto_dot_v1alpha2_dot_resource__service__pb2.WatchResourceRequest.SerializeToString,
                response_deserializer=edgelq__sdk_dot_meta_dot_proto_dot_v1alpha2_dot_resource__service__pb2.WatchResourceResponse.FromString,
                _registered_method=True)
        self.WatchResources = channel.unary_stream(
                '/ntt.meta.v1alpha2.ResourceService/WatchResources',
                request_serializer=edgelq__sdk_dot_meta_dot_proto_dot_v1alpha2_dot_resource__service__pb2.WatchResourcesRequest.SerializeToString,
                response_deserializer=edgelq__sdk_dot_meta_dot_proto_dot_v1alpha2_dot_resource__service__pb2.WatchResourcesResponse.FromString,
                _registered_method=True)


class ResourceServiceServicer(object):
    """Resource service API for Meta
    """

    def GetResource(self, request, context):
        """GetResource
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def BatchGetResources(self, request, context):
        """BatchGetResources
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListResources(self, request, context):
        """ListResources
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def WatchResource(self, request, context):
        """WatchResource
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def WatchResources(self, request, context):
        """WatchResources
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ResourceServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetResource': grpc.unary_unary_rpc_method_handler(
                    servicer.GetResource,
                    request_deserializer=edgelq__sdk_dot_meta_dot_proto_dot_v1alpha2_dot_resource__service__pb2.GetResourceRequest.FromString,
                    response_serializer=edgelq__sdk_dot_meta_dot_proto_dot_v1alpha2_dot_resource__pb2.Resource.SerializeToString,
            ),
            'BatchGetResources': grpc.unary_unary_rpc_method_handler(
                    servicer.BatchGetResources,
                    request_deserializer=edgelq__sdk_dot_meta_dot_proto_dot_v1alpha2_dot_resource__service__pb2.BatchGetResourcesRequest.FromString,
                    response_serializer=edgelq__sdk_dot_meta_dot_proto_dot_v1alpha2_dot_resource__service__pb2.BatchGetResourcesResponse.SerializeToString,
            ),
            'ListResources': grpc.unary_unary_rpc_method_handler(
                    servicer.ListResources,
                    request_deserializer=edgelq__sdk_dot_meta_dot_proto_dot_v1alpha2_dot_resource__service__pb2.ListResourcesRequest.FromString,
                    response_serializer=edgelq__sdk_dot_meta_dot_proto_dot_v1alpha2_dot_resource__service__pb2.ListResourcesResponse.SerializeToString,
            ),
            'WatchResource': grpc.unary_stream_rpc_method_handler(
                    servicer.WatchResource,
                    request_deserializer=edgelq__sdk_dot_meta_dot_proto_dot_v1alpha2_dot_resource__service__pb2.WatchResourceRequest.FromString,
                    response_serializer=edgelq__sdk_dot_meta_dot_proto_dot_v1alpha2_dot_resource__service__pb2.WatchResourceResponse.SerializeToString,
            ),
            'WatchResources': grpc.unary_stream_rpc_method_handler(
                    servicer.WatchResources,
                    request_deserializer=edgelq__sdk_dot_meta_dot_proto_dot_v1alpha2_dot_resource__service__pb2.WatchResourcesRequest.FromString,
                    response_serializer=edgelq__sdk_dot_meta_dot_proto_dot_v1alpha2_dot_resource__service__pb2.WatchResourcesResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'ntt.meta.v1alpha2.ResourceService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('ntt.meta.v1alpha2.ResourceService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class ResourceService(object):
    """Resource service API for Meta
    """

    @staticmethod
    def GetResource(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/ntt.meta.v1alpha2.ResourceService/GetResource',
            edgelq__sdk_dot_meta_dot_proto_dot_v1alpha2_dot_resource__service__pb2.GetResourceRequest.SerializeToString,
            edgelq__sdk_dot_meta_dot_proto_dot_v1alpha2_dot_resource__pb2.Resource.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def BatchGetResources(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/ntt.meta.v1alpha2.ResourceService/BatchGetResources',
            edgelq__sdk_dot_meta_dot_proto_dot_v1alpha2_dot_resource__service__pb2.BatchGetResourcesRequest.SerializeToString,
            edgelq__sdk_dot_meta_dot_proto_dot_v1alpha2_dot_resource__service__pb2.BatchGetResourcesResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ListResources(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/ntt.meta.v1alpha2.ResourceService/ListResources',
            edgelq__sdk_dot_meta_dot_proto_dot_v1alpha2_dot_resource__service__pb2.ListResourcesRequest.SerializeToString,
            edgelq__sdk_dot_meta_dot_proto_dot_v1alpha2_dot_resource__service__pb2.ListResourcesResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def WatchResource(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(
            request,
            target,
            '/ntt.meta.v1alpha2.ResourceService/WatchResource',
            edgelq__sdk_dot_meta_dot_proto_dot_v1alpha2_dot_resource__service__pb2.WatchResourceRequest.SerializeToString,
            edgelq__sdk_dot_meta_dot_proto_dot_v1alpha2_dot_resource__service__pb2.WatchResourceResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def WatchResources(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(
            request,
            target,
            '/ntt.meta.v1alpha2.ResourceService/WatchResources',
            edgelq__sdk_dot_meta_dot_proto_dot_v1alpha2_dot_resource__service__pb2.WatchResourcesRequest.SerializeToString,
            edgelq__sdk_dot_meta_dot_proto_dot_v1alpha2_dot_resource__service__pb2.WatchResourcesResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
