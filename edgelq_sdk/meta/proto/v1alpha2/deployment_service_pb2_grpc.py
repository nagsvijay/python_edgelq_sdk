# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
import warnings

from edgelq_sdk.meta.proto.v1alpha2 import deployment_pb2 as edgelq__sdk_dot_meta_dot_proto_dot_v1alpha2_dot_deployment__pb2
from edgelq_sdk.meta.proto.v1alpha2 import deployment_service_pb2 as edgelq__sdk_dot_meta_dot_proto_dot_v1alpha2_dot_deployment__service__pb2

GRPC_GENERATED_VERSION = '1.66.2'
GRPC_VERSION = grpc.__version__
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower
    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    raise RuntimeError(
        f'The grpc package installed is at version {GRPC_VERSION},'
        + f' but the generated code in edgelq_sdk/meta/proto/v1alpha2/deployment_service_pb2_grpc.py depends on'
        + f' grpcio>={GRPC_GENERATED_VERSION}.'
        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
    )


class DeploymentServiceStub(object):
    """Deployment service API for Meta
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetDeployment = channel.unary_unary(
                '/ntt.meta.v1alpha2.DeploymentService/GetDeployment',
                request_serializer=edgelq__sdk_dot_meta_dot_proto_dot_v1alpha2_dot_deployment__service__pb2.GetDeploymentRequest.SerializeToString,
                response_deserializer=edgelq__sdk_dot_meta_dot_proto_dot_v1alpha2_dot_deployment__pb2.Deployment.FromString,
                _registered_method=True)
        self.BatchGetDeployments = channel.unary_unary(
                '/ntt.meta.v1alpha2.DeploymentService/BatchGetDeployments',
                request_serializer=edgelq__sdk_dot_meta_dot_proto_dot_v1alpha2_dot_deployment__service__pb2.BatchGetDeploymentsRequest.SerializeToString,
                response_deserializer=edgelq__sdk_dot_meta_dot_proto_dot_v1alpha2_dot_deployment__service__pb2.BatchGetDeploymentsResponse.FromString,
                _registered_method=True)
        self.ListDeployments = channel.unary_unary(
                '/ntt.meta.v1alpha2.DeploymentService/ListDeployments',
                request_serializer=edgelq__sdk_dot_meta_dot_proto_dot_v1alpha2_dot_deployment__service__pb2.ListDeploymentsRequest.SerializeToString,
                response_deserializer=edgelq__sdk_dot_meta_dot_proto_dot_v1alpha2_dot_deployment__service__pb2.ListDeploymentsResponse.FromString,
                _registered_method=True)
        self.WatchDeployment = channel.unary_stream(
                '/ntt.meta.v1alpha2.DeploymentService/WatchDeployment',
                request_serializer=edgelq__sdk_dot_meta_dot_proto_dot_v1alpha2_dot_deployment__service__pb2.WatchDeploymentRequest.SerializeToString,
                response_deserializer=edgelq__sdk_dot_meta_dot_proto_dot_v1alpha2_dot_deployment__service__pb2.WatchDeploymentResponse.FromString,
                _registered_method=True)
        self.WatchDeployments = channel.unary_stream(
                '/ntt.meta.v1alpha2.DeploymentService/WatchDeployments',
                request_serializer=edgelq__sdk_dot_meta_dot_proto_dot_v1alpha2_dot_deployment__service__pb2.WatchDeploymentsRequest.SerializeToString,
                response_deserializer=edgelq__sdk_dot_meta_dot_proto_dot_v1alpha2_dot_deployment__service__pb2.WatchDeploymentsResponse.FromString,
                _registered_method=True)


class DeploymentServiceServicer(object):
    """Deployment service API for Meta
    """

    def GetDeployment(self, request, context):
        """GetDeployment
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def BatchGetDeployments(self, request, context):
        """BatchGetDeployments
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListDeployments(self, request, context):
        """ListDeployments
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def WatchDeployment(self, request, context):
        """WatchDeployment
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def WatchDeployments(self, request, context):
        """WatchDeployments
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_DeploymentServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetDeployment': grpc.unary_unary_rpc_method_handler(
                    servicer.GetDeployment,
                    request_deserializer=edgelq__sdk_dot_meta_dot_proto_dot_v1alpha2_dot_deployment__service__pb2.GetDeploymentRequest.FromString,
                    response_serializer=edgelq__sdk_dot_meta_dot_proto_dot_v1alpha2_dot_deployment__pb2.Deployment.SerializeToString,
            ),
            'BatchGetDeployments': grpc.unary_unary_rpc_method_handler(
                    servicer.BatchGetDeployments,
                    request_deserializer=edgelq__sdk_dot_meta_dot_proto_dot_v1alpha2_dot_deployment__service__pb2.BatchGetDeploymentsRequest.FromString,
                    response_serializer=edgelq__sdk_dot_meta_dot_proto_dot_v1alpha2_dot_deployment__service__pb2.BatchGetDeploymentsResponse.SerializeToString,
            ),
            'ListDeployments': grpc.unary_unary_rpc_method_handler(
                    servicer.ListDeployments,
                    request_deserializer=edgelq__sdk_dot_meta_dot_proto_dot_v1alpha2_dot_deployment__service__pb2.ListDeploymentsRequest.FromString,
                    response_serializer=edgelq__sdk_dot_meta_dot_proto_dot_v1alpha2_dot_deployment__service__pb2.ListDeploymentsResponse.SerializeToString,
            ),
            'WatchDeployment': grpc.unary_stream_rpc_method_handler(
                    servicer.WatchDeployment,
                    request_deserializer=edgelq__sdk_dot_meta_dot_proto_dot_v1alpha2_dot_deployment__service__pb2.WatchDeploymentRequest.FromString,
                    response_serializer=edgelq__sdk_dot_meta_dot_proto_dot_v1alpha2_dot_deployment__service__pb2.WatchDeploymentResponse.SerializeToString,
            ),
            'WatchDeployments': grpc.unary_stream_rpc_method_handler(
                    servicer.WatchDeployments,
                    request_deserializer=edgelq__sdk_dot_meta_dot_proto_dot_v1alpha2_dot_deployment__service__pb2.WatchDeploymentsRequest.FromString,
                    response_serializer=edgelq__sdk_dot_meta_dot_proto_dot_v1alpha2_dot_deployment__service__pb2.WatchDeploymentsResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'ntt.meta.v1alpha2.DeploymentService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('ntt.meta.v1alpha2.DeploymentService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class DeploymentService(object):
    """Deployment service API for Meta
    """

    @staticmethod
    def GetDeployment(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/ntt.meta.v1alpha2.DeploymentService/GetDeployment',
            edgelq__sdk_dot_meta_dot_proto_dot_v1alpha2_dot_deployment__service__pb2.GetDeploymentRequest.SerializeToString,
            edgelq__sdk_dot_meta_dot_proto_dot_v1alpha2_dot_deployment__pb2.Deployment.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def BatchGetDeployments(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/ntt.meta.v1alpha2.DeploymentService/BatchGetDeployments',
            edgelq__sdk_dot_meta_dot_proto_dot_v1alpha2_dot_deployment__service__pb2.BatchGetDeploymentsRequest.SerializeToString,
            edgelq__sdk_dot_meta_dot_proto_dot_v1alpha2_dot_deployment__service__pb2.BatchGetDeploymentsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ListDeployments(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/ntt.meta.v1alpha2.DeploymentService/ListDeployments',
            edgelq__sdk_dot_meta_dot_proto_dot_v1alpha2_dot_deployment__service__pb2.ListDeploymentsRequest.SerializeToString,
            edgelq__sdk_dot_meta_dot_proto_dot_v1alpha2_dot_deployment__service__pb2.ListDeploymentsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def WatchDeployment(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(
            request,
            target,
            '/ntt.meta.v1alpha2.DeploymentService/WatchDeployment',
            edgelq__sdk_dot_meta_dot_proto_dot_v1alpha2_dot_deployment__service__pb2.WatchDeploymentRequest.SerializeToString,
            edgelq__sdk_dot_meta_dot_proto_dot_v1alpha2_dot_deployment__service__pb2.WatchDeploymentResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def WatchDeployments(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(
            request,
            target,
            '/ntt.meta.v1alpha2.DeploymentService/WatchDeployments',
            edgelq__sdk_dot_meta_dot_proto_dot_v1alpha2_dot_deployment__service__pb2.WatchDeploymentsRequest.SerializeToString,
            edgelq__sdk_dot_meta_dot_proto_dot_v1alpha2_dot_deployment__service__pb2.WatchDeploymentsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
