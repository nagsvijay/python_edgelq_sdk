# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
import warnings

from edgelq_sdk.monitoring.proto.v4 import bucket_pb2 as edgelq__sdk_dot_monitoring_dot_proto_dot_v4_dot_bucket__pb2
from edgelq_sdk.monitoring.proto.v4 import bucket_service_pb2 as edgelq__sdk_dot_monitoring_dot_proto_dot_v4_dot_bucket__service__pb2
from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2

GRPC_GENERATED_VERSION = '1.66.2'
GRPC_VERSION = grpc.__version__
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower
    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    raise RuntimeError(
        f'The grpc package installed is at version {GRPC_VERSION},'
        + f' but the generated code in edgelq_sdk/monitoring/proto/v4/bucket_service_pb2_grpc.py depends on'
        + f' grpcio>={GRPC_GENERATED_VERSION}.'
        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
    )


class BucketServiceStub(object):
    """Bucket service API for Monitoring
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetBucket = channel.unary_unary(
                '/ntt.monitoring.v4.BucketService/GetBucket',
                request_serializer=edgelq__sdk_dot_monitoring_dot_proto_dot_v4_dot_bucket__service__pb2.GetBucketRequest.SerializeToString,
                response_deserializer=edgelq__sdk_dot_monitoring_dot_proto_dot_v4_dot_bucket__pb2.Bucket.FromString,
                _registered_method=True)
        self.BatchGetBuckets = channel.unary_unary(
                '/ntt.monitoring.v4.BucketService/BatchGetBuckets',
                request_serializer=edgelq__sdk_dot_monitoring_dot_proto_dot_v4_dot_bucket__service__pb2.BatchGetBucketsRequest.SerializeToString,
                response_deserializer=edgelq__sdk_dot_monitoring_dot_proto_dot_v4_dot_bucket__service__pb2.BatchGetBucketsResponse.FromString,
                _registered_method=True)
        self.ListBuckets = channel.unary_unary(
                '/ntt.monitoring.v4.BucketService/ListBuckets',
                request_serializer=edgelq__sdk_dot_monitoring_dot_proto_dot_v4_dot_bucket__service__pb2.ListBucketsRequest.SerializeToString,
                response_deserializer=edgelq__sdk_dot_monitoring_dot_proto_dot_v4_dot_bucket__service__pb2.ListBucketsResponse.FromString,
                _registered_method=True)
        self.WatchBucket = channel.unary_stream(
                '/ntt.monitoring.v4.BucketService/WatchBucket',
                request_serializer=edgelq__sdk_dot_monitoring_dot_proto_dot_v4_dot_bucket__service__pb2.WatchBucketRequest.SerializeToString,
                response_deserializer=edgelq__sdk_dot_monitoring_dot_proto_dot_v4_dot_bucket__service__pb2.WatchBucketResponse.FromString,
                _registered_method=True)
        self.WatchBuckets = channel.unary_stream(
                '/ntt.monitoring.v4.BucketService/WatchBuckets',
                request_serializer=edgelq__sdk_dot_monitoring_dot_proto_dot_v4_dot_bucket__service__pb2.WatchBucketsRequest.SerializeToString,
                response_deserializer=edgelq__sdk_dot_monitoring_dot_proto_dot_v4_dot_bucket__service__pb2.WatchBucketsResponse.FromString,
                _registered_method=True)
        self.CreateBucket = channel.unary_unary(
                '/ntt.monitoring.v4.BucketService/CreateBucket',
                request_serializer=edgelq__sdk_dot_monitoring_dot_proto_dot_v4_dot_bucket__service__pb2.CreateBucketRequest.SerializeToString,
                response_deserializer=edgelq__sdk_dot_monitoring_dot_proto_dot_v4_dot_bucket__pb2.Bucket.FromString,
                _registered_method=True)
        self.UpdateBucket = channel.unary_unary(
                '/ntt.monitoring.v4.BucketService/UpdateBucket',
                request_serializer=edgelq__sdk_dot_monitoring_dot_proto_dot_v4_dot_bucket__service__pb2.UpdateBucketRequest.SerializeToString,
                response_deserializer=edgelq__sdk_dot_monitoring_dot_proto_dot_v4_dot_bucket__pb2.Bucket.FromString,
                _registered_method=True)
        self.DeleteBucket = channel.unary_unary(
                '/ntt.monitoring.v4.BucketService/DeleteBucket',
                request_serializer=edgelq__sdk_dot_monitoring_dot_proto_dot_v4_dot_bucket__service__pb2.DeleteBucketRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                _registered_method=True)


class BucketServiceServicer(object):
    """Bucket service API for Monitoring
    """

    def GetBucket(self, request, context):
        """GetBucket
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def BatchGetBuckets(self, request, context):
        """BatchGetBuckets
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListBuckets(self, request, context):
        """ListBuckets
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def WatchBucket(self, request, context):
        """WatchBucket
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def WatchBuckets(self, request, context):
        """WatchBuckets
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateBucket(self, request, context):
        """CreateBucket
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateBucket(self, request, context):
        """UpdateBucket
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteBucket(self, request, context):
        """DeleteBucket
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_BucketServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetBucket': grpc.unary_unary_rpc_method_handler(
                    servicer.GetBucket,
                    request_deserializer=edgelq__sdk_dot_monitoring_dot_proto_dot_v4_dot_bucket__service__pb2.GetBucketRequest.FromString,
                    response_serializer=edgelq__sdk_dot_monitoring_dot_proto_dot_v4_dot_bucket__pb2.Bucket.SerializeToString,
            ),
            'BatchGetBuckets': grpc.unary_unary_rpc_method_handler(
                    servicer.BatchGetBuckets,
                    request_deserializer=edgelq__sdk_dot_monitoring_dot_proto_dot_v4_dot_bucket__service__pb2.BatchGetBucketsRequest.FromString,
                    response_serializer=edgelq__sdk_dot_monitoring_dot_proto_dot_v4_dot_bucket__service__pb2.BatchGetBucketsResponse.SerializeToString,
            ),
            'ListBuckets': grpc.unary_unary_rpc_method_handler(
                    servicer.ListBuckets,
                    request_deserializer=edgelq__sdk_dot_monitoring_dot_proto_dot_v4_dot_bucket__service__pb2.ListBucketsRequest.FromString,
                    response_serializer=edgelq__sdk_dot_monitoring_dot_proto_dot_v4_dot_bucket__service__pb2.ListBucketsResponse.SerializeToString,
            ),
            'WatchBucket': grpc.unary_stream_rpc_method_handler(
                    servicer.WatchBucket,
                    request_deserializer=edgelq__sdk_dot_monitoring_dot_proto_dot_v4_dot_bucket__service__pb2.WatchBucketRequest.FromString,
                    response_serializer=edgelq__sdk_dot_monitoring_dot_proto_dot_v4_dot_bucket__service__pb2.WatchBucketResponse.SerializeToString,
            ),
            'WatchBuckets': grpc.unary_stream_rpc_method_handler(
                    servicer.WatchBuckets,
                    request_deserializer=edgelq__sdk_dot_monitoring_dot_proto_dot_v4_dot_bucket__service__pb2.WatchBucketsRequest.FromString,
                    response_serializer=edgelq__sdk_dot_monitoring_dot_proto_dot_v4_dot_bucket__service__pb2.WatchBucketsResponse.SerializeToString,
            ),
            'CreateBucket': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateBucket,
                    request_deserializer=edgelq__sdk_dot_monitoring_dot_proto_dot_v4_dot_bucket__service__pb2.CreateBucketRequest.FromString,
                    response_serializer=edgelq__sdk_dot_monitoring_dot_proto_dot_v4_dot_bucket__pb2.Bucket.SerializeToString,
            ),
            'UpdateBucket': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateBucket,
                    request_deserializer=edgelq__sdk_dot_monitoring_dot_proto_dot_v4_dot_bucket__service__pb2.UpdateBucketRequest.FromString,
                    response_serializer=edgelq__sdk_dot_monitoring_dot_proto_dot_v4_dot_bucket__pb2.Bucket.SerializeToString,
            ),
            'DeleteBucket': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteBucket,
                    request_deserializer=edgelq__sdk_dot_monitoring_dot_proto_dot_v4_dot_bucket__service__pb2.DeleteBucketRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'ntt.monitoring.v4.BucketService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('ntt.monitoring.v4.BucketService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class BucketService(object):
    """Bucket service API for Monitoring
    """

    @staticmethod
    def GetBucket(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/ntt.monitoring.v4.BucketService/GetBucket',
            edgelq__sdk_dot_monitoring_dot_proto_dot_v4_dot_bucket__service__pb2.GetBucketRequest.SerializeToString,
            edgelq__sdk_dot_monitoring_dot_proto_dot_v4_dot_bucket__pb2.Bucket.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def BatchGetBuckets(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/ntt.monitoring.v4.BucketService/BatchGetBuckets',
            edgelq__sdk_dot_monitoring_dot_proto_dot_v4_dot_bucket__service__pb2.BatchGetBucketsRequest.SerializeToString,
            edgelq__sdk_dot_monitoring_dot_proto_dot_v4_dot_bucket__service__pb2.BatchGetBucketsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ListBuckets(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/ntt.monitoring.v4.BucketService/ListBuckets',
            edgelq__sdk_dot_monitoring_dot_proto_dot_v4_dot_bucket__service__pb2.ListBucketsRequest.SerializeToString,
            edgelq__sdk_dot_monitoring_dot_proto_dot_v4_dot_bucket__service__pb2.ListBucketsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def WatchBucket(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(
            request,
            target,
            '/ntt.monitoring.v4.BucketService/WatchBucket',
            edgelq__sdk_dot_monitoring_dot_proto_dot_v4_dot_bucket__service__pb2.WatchBucketRequest.SerializeToString,
            edgelq__sdk_dot_monitoring_dot_proto_dot_v4_dot_bucket__service__pb2.WatchBucketResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def WatchBuckets(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(
            request,
            target,
            '/ntt.monitoring.v4.BucketService/WatchBuckets',
            edgelq__sdk_dot_monitoring_dot_proto_dot_v4_dot_bucket__service__pb2.WatchBucketsRequest.SerializeToString,
            edgelq__sdk_dot_monitoring_dot_proto_dot_v4_dot_bucket__service__pb2.WatchBucketsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def CreateBucket(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/ntt.monitoring.v4.BucketService/CreateBucket',
            edgelq__sdk_dot_monitoring_dot_proto_dot_v4_dot_bucket__service__pb2.CreateBucketRequest.SerializeToString,
            edgelq__sdk_dot_monitoring_dot_proto_dot_v4_dot_bucket__pb2.Bucket.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def UpdateBucket(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/ntt.monitoring.v4.BucketService/UpdateBucket',
            edgelq__sdk_dot_monitoring_dot_proto_dot_v4_dot_bucket__service__pb2.UpdateBucketRequest.SerializeToString,
            edgelq__sdk_dot_monitoring_dot_proto_dot_v4_dot_bucket__pb2.Bucket.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def DeleteBucket(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/ntt.monitoring.v4.BucketService/DeleteBucket',
            edgelq__sdk_dot_monitoring_dot_proto_dot_v4_dot_bucket__service__pb2.DeleteBucketRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
