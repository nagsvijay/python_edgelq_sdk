# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
import warnings

from edgelq_sdk.devices.proto.v1 import os_version_pb2 as edgelq__sdk_dot_devices_dot_proto_dot_v1_dot_os__version__pb2
from edgelq_sdk.devices.proto.v1 import os_version_service_pb2 as edgelq__sdk_dot_devices_dot_proto_dot_v1_dot_os__version__service__pb2
from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2

GRPC_GENERATED_VERSION = '1.66.2'
GRPC_VERSION = grpc.__version__
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower
    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    raise RuntimeError(
        f'The grpc package installed is at version {GRPC_VERSION},'
        + f' but the generated code in edgelq_sdk/devices/proto/v1/os_version_service_pb2_grpc.py depends on'
        + f' grpcio>={GRPC_GENERATED_VERSION}.'
        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
    )


class OsVersionServiceStub(object):
    """OsVersion service API for Devices
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetOsVersion = channel.unary_unary(
                '/ntt.devices.v1.OsVersionService/GetOsVersion',
                request_serializer=edgelq__sdk_dot_devices_dot_proto_dot_v1_dot_os__version__service__pb2.GetOsVersionRequest.SerializeToString,
                response_deserializer=edgelq__sdk_dot_devices_dot_proto_dot_v1_dot_os__version__pb2.OsVersion.FromString,
                _registered_method=True)
        self.BatchGetOsVersions = channel.unary_unary(
                '/ntt.devices.v1.OsVersionService/BatchGetOsVersions',
                request_serializer=edgelq__sdk_dot_devices_dot_proto_dot_v1_dot_os__version__service__pb2.BatchGetOsVersionsRequest.SerializeToString,
                response_deserializer=edgelq__sdk_dot_devices_dot_proto_dot_v1_dot_os__version__service__pb2.BatchGetOsVersionsResponse.FromString,
                _registered_method=True)
        self.ListOsVersions = channel.unary_unary(
                '/ntt.devices.v1.OsVersionService/ListOsVersions',
                request_serializer=edgelq__sdk_dot_devices_dot_proto_dot_v1_dot_os__version__service__pb2.ListOsVersionsRequest.SerializeToString,
                response_deserializer=edgelq__sdk_dot_devices_dot_proto_dot_v1_dot_os__version__service__pb2.ListOsVersionsResponse.FromString,
                _registered_method=True)
        self.WatchOsVersion = channel.unary_stream(
                '/ntt.devices.v1.OsVersionService/WatchOsVersion',
                request_serializer=edgelq__sdk_dot_devices_dot_proto_dot_v1_dot_os__version__service__pb2.WatchOsVersionRequest.SerializeToString,
                response_deserializer=edgelq__sdk_dot_devices_dot_proto_dot_v1_dot_os__version__service__pb2.WatchOsVersionResponse.FromString,
                _registered_method=True)
        self.WatchOsVersions = channel.unary_stream(
                '/ntt.devices.v1.OsVersionService/WatchOsVersions',
                request_serializer=edgelq__sdk_dot_devices_dot_proto_dot_v1_dot_os__version__service__pb2.WatchOsVersionsRequest.SerializeToString,
                response_deserializer=edgelq__sdk_dot_devices_dot_proto_dot_v1_dot_os__version__service__pb2.WatchOsVersionsResponse.FromString,
                _registered_method=True)
        self.CreateOsVersion = channel.unary_unary(
                '/ntt.devices.v1.OsVersionService/CreateOsVersion',
                request_serializer=edgelq__sdk_dot_devices_dot_proto_dot_v1_dot_os__version__service__pb2.CreateOsVersionRequest.SerializeToString,
                response_deserializer=edgelq__sdk_dot_devices_dot_proto_dot_v1_dot_os__version__pb2.OsVersion.FromString,
                _registered_method=True)
        self.UpdateOsVersion = channel.unary_unary(
                '/ntt.devices.v1.OsVersionService/UpdateOsVersion',
                request_serializer=edgelq__sdk_dot_devices_dot_proto_dot_v1_dot_os__version__service__pb2.UpdateOsVersionRequest.SerializeToString,
                response_deserializer=edgelq__sdk_dot_devices_dot_proto_dot_v1_dot_os__version__pb2.OsVersion.FromString,
                _registered_method=True)
        self.DeleteOsVersion = channel.unary_unary(
                '/ntt.devices.v1.OsVersionService/DeleteOsVersion',
                request_serializer=edgelq__sdk_dot_devices_dot_proto_dot_v1_dot_os__version__service__pb2.DeleteOsVersionRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                _registered_method=True)


class OsVersionServiceServicer(object):
    """OsVersion service API for Devices
    """

    def GetOsVersion(self, request, context):
        """GetOsVersion
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def BatchGetOsVersions(self, request, context):
        """BatchGetOsVersions
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListOsVersions(self, request, context):
        """ListOsVersions
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def WatchOsVersion(self, request, context):
        """WatchOsVersion
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def WatchOsVersions(self, request, context):
        """WatchOsVersions
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateOsVersion(self, request, context):
        """CreateOsVersion
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateOsVersion(self, request, context):
        """UpdateOsVersion
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteOsVersion(self, request, context):
        """DeleteOsVersion
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_OsVersionServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetOsVersion': grpc.unary_unary_rpc_method_handler(
                    servicer.GetOsVersion,
                    request_deserializer=edgelq__sdk_dot_devices_dot_proto_dot_v1_dot_os__version__service__pb2.GetOsVersionRequest.FromString,
                    response_serializer=edgelq__sdk_dot_devices_dot_proto_dot_v1_dot_os__version__pb2.OsVersion.SerializeToString,
            ),
            'BatchGetOsVersions': grpc.unary_unary_rpc_method_handler(
                    servicer.BatchGetOsVersions,
                    request_deserializer=edgelq__sdk_dot_devices_dot_proto_dot_v1_dot_os__version__service__pb2.BatchGetOsVersionsRequest.FromString,
                    response_serializer=edgelq__sdk_dot_devices_dot_proto_dot_v1_dot_os__version__service__pb2.BatchGetOsVersionsResponse.SerializeToString,
            ),
            'ListOsVersions': grpc.unary_unary_rpc_method_handler(
                    servicer.ListOsVersions,
                    request_deserializer=edgelq__sdk_dot_devices_dot_proto_dot_v1_dot_os__version__service__pb2.ListOsVersionsRequest.FromString,
                    response_serializer=edgelq__sdk_dot_devices_dot_proto_dot_v1_dot_os__version__service__pb2.ListOsVersionsResponse.SerializeToString,
            ),
            'WatchOsVersion': grpc.unary_stream_rpc_method_handler(
                    servicer.WatchOsVersion,
                    request_deserializer=edgelq__sdk_dot_devices_dot_proto_dot_v1_dot_os__version__service__pb2.WatchOsVersionRequest.FromString,
                    response_serializer=edgelq__sdk_dot_devices_dot_proto_dot_v1_dot_os__version__service__pb2.WatchOsVersionResponse.SerializeToString,
            ),
            'WatchOsVersions': grpc.unary_stream_rpc_method_handler(
                    servicer.WatchOsVersions,
                    request_deserializer=edgelq__sdk_dot_devices_dot_proto_dot_v1_dot_os__version__service__pb2.WatchOsVersionsRequest.FromString,
                    response_serializer=edgelq__sdk_dot_devices_dot_proto_dot_v1_dot_os__version__service__pb2.WatchOsVersionsResponse.SerializeToString,
            ),
            'CreateOsVersion': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateOsVersion,
                    request_deserializer=edgelq__sdk_dot_devices_dot_proto_dot_v1_dot_os__version__service__pb2.CreateOsVersionRequest.FromString,
                    response_serializer=edgelq__sdk_dot_devices_dot_proto_dot_v1_dot_os__version__pb2.OsVersion.SerializeToString,
            ),
            'UpdateOsVersion': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateOsVersion,
                    request_deserializer=edgelq__sdk_dot_devices_dot_proto_dot_v1_dot_os__version__service__pb2.UpdateOsVersionRequest.FromString,
                    response_serializer=edgelq__sdk_dot_devices_dot_proto_dot_v1_dot_os__version__pb2.OsVersion.SerializeToString,
            ),
            'DeleteOsVersion': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteOsVersion,
                    request_deserializer=edgelq__sdk_dot_devices_dot_proto_dot_v1_dot_os__version__service__pb2.DeleteOsVersionRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'ntt.devices.v1.OsVersionService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('ntt.devices.v1.OsVersionService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class OsVersionService(object):
    """OsVersion service API for Devices
    """

    @staticmethod
    def GetOsVersion(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/ntt.devices.v1.OsVersionService/GetOsVersion',
            edgelq__sdk_dot_devices_dot_proto_dot_v1_dot_os__version__service__pb2.GetOsVersionRequest.SerializeToString,
            edgelq__sdk_dot_devices_dot_proto_dot_v1_dot_os__version__pb2.OsVersion.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def BatchGetOsVersions(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/ntt.devices.v1.OsVersionService/BatchGetOsVersions',
            edgelq__sdk_dot_devices_dot_proto_dot_v1_dot_os__version__service__pb2.BatchGetOsVersionsRequest.SerializeToString,
            edgelq__sdk_dot_devices_dot_proto_dot_v1_dot_os__version__service__pb2.BatchGetOsVersionsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ListOsVersions(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/ntt.devices.v1.OsVersionService/ListOsVersions',
            edgelq__sdk_dot_devices_dot_proto_dot_v1_dot_os__version__service__pb2.ListOsVersionsRequest.SerializeToString,
            edgelq__sdk_dot_devices_dot_proto_dot_v1_dot_os__version__service__pb2.ListOsVersionsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def WatchOsVersion(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(
            request,
            target,
            '/ntt.devices.v1.OsVersionService/WatchOsVersion',
            edgelq__sdk_dot_devices_dot_proto_dot_v1_dot_os__version__service__pb2.WatchOsVersionRequest.SerializeToString,
            edgelq__sdk_dot_devices_dot_proto_dot_v1_dot_os__version__service__pb2.WatchOsVersionResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def WatchOsVersions(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(
            request,
            target,
            '/ntt.devices.v1.OsVersionService/WatchOsVersions',
            edgelq__sdk_dot_devices_dot_proto_dot_v1_dot_os__version__service__pb2.WatchOsVersionsRequest.SerializeToString,
            edgelq__sdk_dot_devices_dot_proto_dot_v1_dot_os__version__service__pb2.WatchOsVersionsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def CreateOsVersion(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/ntt.devices.v1.OsVersionService/CreateOsVersion',
            edgelq__sdk_dot_devices_dot_proto_dot_v1_dot_os__version__service__pb2.CreateOsVersionRequest.SerializeToString,
            edgelq__sdk_dot_devices_dot_proto_dot_v1_dot_os__version__pb2.OsVersion.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def UpdateOsVersion(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/ntt.devices.v1.OsVersionService/UpdateOsVersion',
            edgelq__sdk_dot_devices_dot_proto_dot_v1_dot_os__version__service__pb2.UpdateOsVersionRequest.SerializeToString,
            edgelq__sdk_dot_devices_dot_proto_dot_v1_dot_os__version__pb2.OsVersion.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def DeleteOsVersion(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/ntt.devices.v1.OsVersionService/DeleteOsVersion',
            edgelq__sdk_dot_devices_dot_proto_dot_v1_dot_os__version__service__pb2.DeleteOsVersionRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
