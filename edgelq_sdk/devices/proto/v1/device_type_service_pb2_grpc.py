# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
import warnings

from edgelq_sdk.devices.proto.v1 import device_type_pb2 as edgelq__sdk_dot_devices_dot_proto_dot_v1_dot_device__type__pb2
from edgelq_sdk.devices.proto.v1 import device_type_service_pb2 as edgelq__sdk_dot_devices_dot_proto_dot_v1_dot_device__type__service__pb2
from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2

GRPC_GENERATED_VERSION = '1.66.2'
GRPC_VERSION = grpc.__version__
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower
    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    raise RuntimeError(
        f'The grpc package installed is at version {GRPC_VERSION},'
        + f' but the generated code in edgelq_sdk/devices/proto/v1/device_type_service_pb2_grpc.py depends on'
        + f' grpcio>={GRPC_GENERATED_VERSION}.'
        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
    )


class DeviceTypeServiceStub(object):
    """DeviceType service API for Devices
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetDeviceType = channel.unary_unary(
                '/ntt.devices.v1.DeviceTypeService/GetDeviceType',
                request_serializer=edgelq__sdk_dot_devices_dot_proto_dot_v1_dot_device__type__service__pb2.GetDeviceTypeRequest.SerializeToString,
                response_deserializer=edgelq__sdk_dot_devices_dot_proto_dot_v1_dot_device__type__pb2.DeviceType.FromString,
                _registered_method=True)
        self.BatchGetDeviceTypes = channel.unary_unary(
                '/ntt.devices.v1.DeviceTypeService/BatchGetDeviceTypes',
                request_serializer=edgelq__sdk_dot_devices_dot_proto_dot_v1_dot_device__type__service__pb2.BatchGetDeviceTypesRequest.SerializeToString,
                response_deserializer=edgelq__sdk_dot_devices_dot_proto_dot_v1_dot_device__type__service__pb2.BatchGetDeviceTypesResponse.FromString,
                _registered_method=True)
        self.ListDeviceTypes = channel.unary_unary(
                '/ntt.devices.v1.DeviceTypeService/ListDeviceTypes',
                request_serializer=edgelq__sdk_dot_devices_dot_proto_dot_v1_dot_device__type__service__pb2.ListDeviceTypesRequest.SerializeToString,
                response_deserializer=edgelq__sdk_dot_devices_dot_proto_dot_v1_dot_device__type__service__pb2.ListDeviceTypesResponse.FromString,
                _registered_method=True)
        self.WatchDeviceType = channel.unary_stream(
                '/ntt.devices.v1.DeviceTypeService/WatchDeviceType',
                request_serializer=edgelq__sdk_dot_devices_dot_proto_dot_v1_dot_device__type__service__pb2.WatchDeviceTypeRequest.SerializeToString,
                response_deserializer=edgelq__sdk_dot_devices_dot_proto_dot_v1_dot_device__type__service__pb2.WatchDeviceTypeResponse.FromString,
                _registered_method=True)
        self.WatchDeviceTypes = channel.unary_stream(
                '/ntt.devices.v1.DeviceTypeService/WatchDeviceTypes',
                request_serializer=edgelq__sdk_dot_devices_dot_proto_dot_v1_dot_device__type__service__pb2.WatchDeviceTypesRequest.SerializeToString,
                response_deserializer=edgelq__sdk_dot_devices_dot_proto_dot_v1_dot_device__type__service__pb2.WatchDeviceTypesResponse.FromString,
                _registered_method=True)
        self.CreateDeviceType = channel.unary_unary(
                '/ntt.devices.v1.DeviceTypeService/CreateDeviceType',
                request_serializer=edgelq__sdk_dot_devices_dot_proto_dot_v1_dot_device__type__service__pb2.CreateDeviceTypeRequest.SerializeToString,
                response_deserializer=edgelq__sdk_dot_devices_dot_proto_dot_v1_dot_device__type__pb2.DeviceType.FromString,
                _registered_method=True)
        self.UpdateDeviceType = channel.unary_unary(
                '/ntt.devices.v1.DeviceTypeService/UpdateDeviceType',
                request_serializer=edgelq__sdk_dot_devices_dot_proto_dot_v1_dot_device__type__service__pb2.UpdateDeviceTypeRequest.SerializeToString,
                response_deserializer=edgelq__sdk_dot_devices_dot_proto_dot_v1_dot_device__type__pb2.DeviceType.FromString,
                _registered_method=True)
        self.DeleteDeviceType = channel.unary_unary(
                '/ntt.devices.v1.DeviceTypeService/DeleteDeviceType',
                request_serializer=edgelq__sdk_dot_devices_dot_proto_dot_v1_dot_device__type__service__pb2.DeleteDeviceTypeRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                _registered_method=True)


class DeviceTypeServiceServicer(object):
    """DeviceType service API for Devices
    """

    def GetDeviceType(self, request, context):
        """GetDeviceType
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def BatchGetDeviceTypes(self, request, context):
        """BatchGetDeviceTypes
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListDeviceTypes(self, request, context):
        """ListDeviceTypes
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def WatchDeviceType(self, request, context):
        """WatchDeviceType
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def WatchDeviceTypes(self, request, context):
        """WatchDeviceTypes
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateDeviceType(self, request, context):
        """CreateDeviceType
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateDeviceType(self, request, context):
        """UpdateDeviceType
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteDeviceType(self, request, context):
        """DeleteDeviceType
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_DeviceTypeServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetDeviceType': grpc.unary_unary_rpc_method_handler(
                    servicer.GetDeviceType,
                    request_deserializer=edgelq__sdk_dot_devices_dot_proto_dot_v1_dot_device__type__service__pb2.GetDeviceTypeRequest.FromString,
                    response_serializer=edgelq__sdk_dot_devices_dot_proto_dot_v1_dot_device__type__pb2.DeviceType.SerializeToString,
            ),
            'BatchGetDeviceTypes': grpc.unary_unary_rpc_method_handler(
                    servicer.BatchGetDeviceTypes,
                    request_deserializer=edgelq__sdk_dot_devices_dot_proto_dot_v1_dot_device__type__service__pb2.BatchGetDeviceTypesRequest.FromString,
                    response_serializer=edgelq__sdk_dot_devices_dot_proto_dot_v1_dot_device__type__service__pb2.BatchGetDeviceTypesResponse.SerializeToString,
            ),
            'ListDeviceTypes': grpc.unary_unary_rpc_method_handler(
                    servicer.ListDeviceTypes,
                    request_deserializer=edgelq__sdk_dot_devices_dot_proto_dot_v1_dot_device__type__service__pb2.ListDeviceTypesRequest.FromString,
                    response_serializer=edgelq__sdk_dot_devices_dot_proto_dot_v1_dot_device__type__service__pb2.ListDeviceTypesResponse.SerializeToString,
            ),
            'WatchDeviceType': grpc.unary_stream_rpc_method_handler(
                    servicer.WatchDeviceType,
                    request_deserializer=edgelq__sdk_dot_devices_dot_proto_dot_v1_dot_device__type__service__pb2.WatchDeviceTypeRequest.FromString,
                    response_serializer=edgelq__sdk_dot_devices_dot_proto_dot_v1_dot_device__type__service__pb2.WatchDeviceTypeResponse.SerializeToString,
            ),
            'WatchDeviceTypes': grpc.unary_stream_rpc_method_handler(
                    servicer.WatchDeviceTypes,
                    request_deserializer=edgelq__sdk_dot_devices_dot_proto_dot_v1_dot_device__type__service__pb2.WatchDeviceTypesRequest.FromString,
                    response_serializer=edgelq__sdk_dot_devices_dot_proto_dot_v1_dot_device__type__service__pb2.WatchDeviceTypesResponse.SerializeToString,
            ),
            'CreateDeviceType': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateDeviceType,
                    request_deserializer=edgelq__sdk_dot_devices_dot_proto_dot_v1_dot_device__type__service__pb2.CreateDeviceTypeRequest.FromString,
                    response_serializer=edgelq__sdk_dot_devices_dot_proto_dot_v1_dot_device__type__pb2.DeviceType.SerializeToString,
            ),
            'UpdateDeviceType': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateDeviceType,
                    request_deserializer=edgelq__sdk_dot_devices_dot_proto_dot_v1_dot_device__type__service__pb2.UpdateDeviceTypeRequest.FromString,
                    response_serializer=edgelq__sdk_dot_devices_dot_proto_dot_v1_dot_device__type__pb2.DeviceType.SerializeToString,
            ),
            'DeleteDeviceType': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteDeviceType,
                    request_deserializer=edgelq__sdk_dot_devices_dot_proto_dot_v1_dot_device__type__service__pb2.DeleteDeviceTypeRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'ntt.devices.v1.DeviceTypeService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('ntt.devices.v1.DeviceTypeService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class DeviceTypeService(object):
    """DeviceType service API for Devices
    """

    @staticmethod
    def GetDeviceType(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/ntt.devices.v1.DeviceTypeService/GetDeviceType',
            edgelq__sdk_dot_devices_dot_proto_dot_v1_dot_device__type__service__pb2.GetDeviceTypeRequest.SerializeToString,
            edgelq__sdk_dot_devices_dot_proto_dot_v1_dot_device__type__pb2.DeviceType.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def BatchGetDeviceTypes(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/ntt.devices.v1.DeviceTypeService/BatchGetDeviceTypes',
            edgelq__sdk_dot_devices_dot_proto_dot_v1_dot_device__type__service__pb2.BatchGetDeviceTypesRequest.SerializeToString,
            edgelq__sdk_dot_devices_dot_proto_dot_v1_dot_device__type__service__pb2.BatchGetDeviceTypesResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ListDeviceTypes(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/ntt.devices.v1.DeviceTypeService/ListDeviceTypes',
            edgelq__sdk_dot_devices_dot_proto_dot_v1_dot_device__type__service__pb2.ListDeviceTypesRequest.SerializeToString,
            edgelq__sdk_dot_devices_dot_proto_dot_v1_dot_device__type__service__pb2.ListDeviceTypesResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def WatchDeviceType(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(
            request,
            target,
            '/ntt.devices.v1.DeviceTypeService/WatchDeviceType',
            edgelq__sdk_dot_devices_dot_proto_dot_v1_dot_device__type__service__pb2.WatchDeviceTypeRequest.SerializeToString,
            edgelq__sdk_dot_devices_dot_proto_dot_v1_dot_device__type__service__pb2.WatchDeviceTypeResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def WatchDeviceTypes(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(
            request,
            target,
            '/ntt.devices.v1.DeviceTypeService/WatchDeviceTypes',
            edgelq__sdk_dot_devices_dot_proto_dot_v1_dot_device__type__service__pb2.WatchDeviceTypesRequest.SerializeToString,
            edgelq__sdk_dot_devices_dot_proto_dot_v1_dot_device__type__service__pb2.WatchDeviceTypesResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def CreateDeviceType(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/ntt.devices.v1.DeviceTypeService/CreateDeviceType',
            edgelq__sdk_dot_devices_dot_proto_dot_v1_dot_device__type__service__pb2.CreateDeviceTypeRequest.SerializeToString,
            edgelq__sdk_dot_devices_dot_proto_dot_v1_dot_device__type__pb2.DeviceType.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def UpdateDeviceType(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/ntt.devices.v1.DeviceTypeService/UpdateDeviceType',
            edgelq__sdk_dot_devices_dot_proto_dot_v1_dot_device__type__service__pb2.UpdateDeviceTypeRequest.SerializeToString,
            edgelq__sdk_dot_devices_dot_proto_dot_v1_dot_device__type__pb2.DeviceType.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def DeleteDeviceType(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/ntt.devices.v1.DeviceTypeService/DeleteDeviceType',
            edgelq__sdk_dot_devices_dot_proto_dot_v1_dot_device__type__service__pb2.DeleteDeviceTypeRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
