# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
import warnings

from edgelq_sdk.devices.proto.v1 import device_hardware_custom_pb2 as edgelq__sdk_dot_devices_dot_proto_dot_v1_dot_device__hardware__custom__pb2
from edgelq_sdk.devices.proto.v1 import device_hardware_pb2 as edgelq__sdk_dot_devices_dot_proto_dot_v1_dot_device__hardware__pb2
from edgelq_sdk.devices.proto.v1 import device_hardware_service_pb2 as edgelq__sdk_dot_devices_dot_proto_dot_v1_dot_device__hardware__service__pb2
from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2

GRPC_GENERATED_VERSION = '1.66.2'
GRPC_VERSION = grpc.__version__
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower
    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    raise RuntimeError(
        f'The grpc package installed is at version {GRPC_VERSION},'
        + f' but the generated code in edgelq_sdk/devices/proto/v1/device_hardware_service_pb2_grpc.py depends on'
        + f' grpcio>={GRPC_GENERATED_VERSION}.'
        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
    )


class DeviceHardwareServiceStub(object):
    """DeviceHardware service API for Devices
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetDeviceHardware = channel.unary_unary(
                '/ntt.devices.v1.DeviceHardwareService/GetDeviceHardware',
                request_serializer=edgelq__sdk_dot_devices_dot_proto_dot_v1_dot_device__hardware__service__pb2.GetDeviceHardwareRequest.SerializeToString,
                response_deserializer=edgelq__sdk_dot_devices_dot_proto_dot_v1_dot_device__hardware__pb2.DeviceHardware.FromString,
                _registered_method=True)
        self.BatchGetDeviceHardwares = channel.unary_unary(
                '/ntt.devices.v1.DeviceHardwareService/BatchGetDeviceHardwares',
                request_serializer=edgelq__sdk_dot_devices_dot_proto_dot_v1_dot_device__hardware__service__pb2.BatchGetDeviceHardwaresRequest.SerializeToString,
                response_deserializer=edgelq__sdk_dot_devices_dot_proto_dot_v1_dot_device__hardware__service__pb2.BatchGetDeviceHardwaresResponse.FromString,
                _registered_method=True)
        self.ListDeviceHardwares = channel.unary_unary(
                '/ntt.devices.v1.DeviceHardwareService/ListDeviceHardwares',
                request_serializer=edgelq__sdk_dot_devices_dot_proto_dot_v1_dot_device__hardware__service__pb2.ListDeviceHardwaresRequest.SerializeToString,
                response_deserializer=edgelq__sdk_dot_devices_dot_proto_dot_v1_dot_device__hardware__service__pb2.ListDeviceHardwaresResponse.FromString,
                _registered_method=True)
        self.WatchDeviceHardware = channel.unary_stream(
                '/ntt.devices.v1.DeviceHardwareService/WatchDeviceHardware',
                request_serializer=edgelq__sdk_dot_devices_dot_proto_dot_v1_dot_device__hardware__service__pb2.WatchDeviceHardwareRequest.SerializeToString,
                response_deserializer=edgelq__sdk_dot_devices_dot_proto_dot_v1_dot_device__hardware__service__pb2.WatchDeviceHardwareResponse.FromString,
                _registered_method=True)
        self.WatchDeviceHardwares = channel.unary_stream(
                '/ntt.devices.v1.DeviceHardwareService/WatchDeviceHardwares',
                request_serializer=edgelq__sdk_dot_devices_dot_proto_dot_v1_dot_device__hardware__service__pb2.WatchDeviceHardwaresRequest.SerializeToString,
                response_deserializer=edgelq__sdk_dot_devices_dot_proto_dot_v1_dot_device__hardware__service__pb2.WatchDeviceHardwaresResponse.FromString,
                _registered_method=True)
        self.CreateDeviceHardware = channel.unary_unary(
                '/ntt.devices.v1.DeviceHardwareService/CreateDeviceHardware',
                request_serializer=edgelq__sdk_dot_devices_dot_proto_dot_v1_dot_device__hardware__service__pb2.CreateDeviceHardwareRequest.SerializeToString,
                response_deserializer=edgelq__sdk_dot_devices_dot_proto_dot_v1_dot_device__hardware__pb2.DeviceHardware.FromString,
                _registered_method=True)
        self.UpdateDeviceHardware = channel.unary_unary(
                '/ntt.devices.v1.DeviceHardwareService/UpdateDeviceHardware',
                request_serializer=edgelq__sdk_dot_devices_dot_proto_dot_v1_dot_device__hardware__service__pb2.UpdateDeviceHardwareRequest.SerializeToString,
                response_deserializer=edgelq__sdk_dot_devices_dot_proto_dot_v1_dot_device__hardware__pb2.DeviceHardware.FromString,
                _registered_method=True)
        self.DeleteDeviceHardware = channel.unary_unary(
                '/ntt.devices.v1.DeviceHardwareService/DeleteDeviceHardware',
                request_serializer=edgelq__sdk_dot_devices_dot_proto_dot_v1_dot_device__hardware__service__pb2.DeleteDeviceHardwareRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                _registered_method=True)
        self.Deregister = channel.unary_unary(
                '/ntt.devices.v1.DeviceHardwareService/Deregister',
                request_serializer=edgelq__sdk_dot_devices_dot_proto_dot_v1_dot_device__hardware__custom__pb2.DeregisterRequest.SerializeToString,
                response_deserializer=edgelq__sdk_dot_devices_dot_proto_dot_v1_dot_device__hardware__custom__pb2.DeregisterResponse.FromString,
                _registered_method=True)


class DeviceHardwareServiceServicer(object):
    """DeviceHardware service API for Devices
    """

    def GetDeviceHardware(self, request, context):
        """GetDeviceHardware
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def BatchGetDeviceHardwares(self, request, context):
        """BatchGetDeviceHardwares
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListDeviceHardwares(self, request, context):
        """ListDeviceHardwares
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def WatchDeviceHardware(self, request, context):
        """WatchDeviceHardware
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def WatchDeviceHardwares(self, request, context):
        """WatchDeviceHardwares
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateDeviceHardware(self, request, context):
        """CreateDeviceHardware
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateDeviceHardware(self, request, context):
        """UpdateDeviceHardware
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteDeviceHardware(self, request, context):
        """DeleteDeviceHardware
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Deregister(self, request, context):
        """Deregister
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_DeviceHardwareServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetDeviceHardware': grpc.unary_unary_rpc_method_handler(
                    servicer.GetDeviceHardware,
                    request_deserializer=edgelq__sdk_dot_devices_dot_proto_dot_v1_dot_device__hardware__service__pb2.GetDeviceHardwareRequest.FromString,
                    response_serializer=edgelq__sdk_dot_devices_dot_proto_dot_v1_dot_device__hardware__pb2.DeviceHardware.SerializeToString,
            ),
            'BatchGetDeviceHardwares': grpc.unary_unary_rpc_method_handler(
                    servicer.BatchGetDeviceHardwares,
                    request_deserializer=edgelq__sdk_dot_devices_dot_proto_dot_v1_dot_device__hardware__service__pb2.BatchGetDeviceHardwaresRequest.FromString,
                    response_serializer=edgelq__sdk_dot_devices_dot_proto_dot_v1_dot_device__hardware__service__pb2.BatchGetDeviceHardwaresResponse.SerializeToString,
            ),
            'ListDeviceHardwares': grpc.unary_unary_rpc_method_handler(
                    servicer.ListDeviceHardwares,
                    request_deserializer=edgelq__sdk_dot_devices_dot_proto_dot_v1_dot_device__hardware__service__pb2.ListDeviceHardwaresRequest.FromString,
                    response_serializer=edgelq__sdk_dot_devices_dot_proto_dot_v1_dot_device__hardware__service__pb2.ListDeviceHardwaresResponse.SerializeToString,
            ),
            'WatchDeviceHardware': grpc.unary_stream_rpc_method_handler(
                    servicer.WatchDeviceHardware,
                    request_deserializer=edgelq__sdk_dot_devices_dot_proto_dot_v1_dot_device__hardware__service__pb2.WatchDeviceHardwareRequest.FromString,
                    response_serializer=edgelq__sdk_dot_devices_dot_proto_dot_v1_dot_device__hardware__service__pb2.WatchDeviceHardwareResponse.SerializeToString,
            ),
            'WatchDeviceHardwares': grpc.unary_stream_rpc_method_handler(
                    servicer.WatchDeviceHardwares,
                    request_deserializer=edgelq__sdk_dot_devices_dot_proto_dot_v1_dot_device__hardware__service__pb2.WatchDeviceHardwaresRequest.FromString,
                    response_serializer=edgelq__sdk_dot_devices_dot_proto_dot_v1_dot_device__hardware__service__pb2.WatchDeviceHardwaresResponse.SerializeToString,
            ),
            'CreateDeviceHardware': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateDeviceHardware,
                    request_deserializer=edgelq__sdk_dot_devices_dot_proto_dot_v1_dot_device__hardware__service__pb2.CreateDeviceHardwareRequest.FromString,
                    response_serializer=edgelq__sdk_dot_devices_dot_proto_dot_v1_dot_device__hardware__pb2.DeviceHardware.SerializeToString,
            ),
            'UpdateDeviceHardware': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateDeviceHardware,
                    request_deserializer=edgelq__sdk_dot_devices_dot_proto_dot_v1_dot_device__hardware__service__pb2.UpdateDeviceHardwareRequest.FromString,
                    response_serializer=edgelq__sdk_dot_devices_dot_proto_dot_v1_dot_device__hardware__pb2.DeviceHardware.SerializeToString,
            ),
            'DeleteDeviceHardware': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteDeviceHardware,
                    request_deserializer=edgelq__sdk_dot_devices_dot_proto_dot_v1_dot_device__hardware__service__pb2.DeleteDeviceHardwareRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'Deregister': grpc.unary_unary_rpc_method_handler(
                    servicer.Deregister,
                    request_deserializer=edgelq__sdk_dot_devices_dot_proto_dot_v1_dot_device__hardware__custom__pb2.DeregisterRequest.FromString,
                    response_serializer=edgelq__sdk_dot_devices_dot_proto_dot_v1_dot_device__hardware__custom__pb2.DeregisterResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'ntt.devices.v1.DeviceHardwareService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('ntt.devices.v1.DeviceHardwareService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class DeviceHardwareService(object):
    """DeviceHardware service API for Devices
    """

    @staticmethod
    def GetDeviceHardware(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/ntt.devices.v1.DeviceHardwareService/GetDeviceHardware',
            edgelq__sdk_dot_devices_dot_proto_dot_v1_dot_device__hardware__service__pb2.GetDeviceHardwareRequest.SerializeToString,
            edgelq__sdk_dot_devices_dot_proto_dot_v1_dot_device__hardware__pb2.DeviceHardware.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def BatchGetDeviceHardwares(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/ntt.devices.v1.DeviceHardwareService/BatchGetDeviceHardwares',
            edgelq__sdk_dot_devices_dot_proto_dot_v1_dot_device__hardware__service__pb2.BatchGetDeviceHardwaresRequest.SerializeToString,
            edgelq__sdk_dot_devices_dot_proto_dot_v1_dot_device__hardware__service__pb2.BatchGetDeviceHardwaresResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ListDeviceHardwares(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/ntt.devices.v1.DeviceHardwareService/ListDeviceHardwares',
            edgelq__sdk_dot_devices_dot_proto_dot_v1_dot_device__hardware__service__pb2.ListDeviceHardwaresRequest.SerializeToString,
            edgelq__sdk_dot_devices_dot_proto_dot_v1_dot_device__hardware__service__pb2.ListDeviceHardwaresResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def WatchDeviceHardware(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(
            request,
            target,
            '/ntt.devices.v1.DeviceHardwareService/WatchDeviceHardware',
            edgelq__sdk_dot_devices_dot_proto_dot_v1_dot_device__hardware__service__pb2.WatchDeviceHardwareRequest.SerializeToString,
            edgelq__sdk_dot_devices_dot_proto_dot_v1_dot_device__hardware__service__pb2.WatchDeviceHardwareResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def WatchDeviceHardwares(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(
            request,
            target,
            '/ntt.devices.v1.DeviceHardwareService/WatchDeviceHardwares',
            edgelq__sdk_dot_devices_dot_proto_dot_v1_dot_device__hardware__service__pb2.WatchDeviceHardwaresRequest.SerializeToString,
            edgelq__sdk_dot_devices_dot_proto_dot_v1_dot_device__hardware__service__pb2.WatchDeviceHardwaresResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def CreateDeviceHardware(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/ntt.devices.v1.DeviceHardwareService/CreateDeviceHardware',
            edgelq__sdk_dot_devices_dot_proto_dot_v1_dot_device__hardware__service__pb2.CreateDeviceHardwareRequest.SerializeToString,
            edgelq__sdk_dot_devices_dot_proto_dot_v1_dot_device__hardware__pb2.DeviceHardware.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def UpdateDeviceHardware(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/ntt.devices.v1.DeviceHardwareService/UpdateDeviceHardware',
            edgelq__sdk_dot_devices_dot_proto_dot_v1_dot_device__hardware__service__pb2.UpdateDeviceHardwareRequest.SerializeToString,
            edgelq__sdk_dot_devices_dot_proto_dot_v1_dot_device__hardware__pb2.DeviceHardware.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def DeleteDeviceHardware(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/ntt.devices.v1.DeviceHardwareService/DeleteDeviceHardware',
            edgelq__sdk_dot_devices_dot_proto_dot_v1_dot_device__hardware__service__pb2.DeleteDeviceHardwareRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def Deregister(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/ntt.devices.v1.DeviceHardwareService/Deregister',
            edgelq__sdk_dot_devices_dot_proto_dot_v1_dot_device__hardware__custom__pb2.DeregisterRequest.SerializeToString,
            edgelq__sdk_dot_devices_dot_proto_dot_v1_dot_device__hardware__custom__pb2.DeregisterResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
