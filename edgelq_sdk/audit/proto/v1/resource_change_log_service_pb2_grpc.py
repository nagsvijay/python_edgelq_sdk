# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
import warnings

from edgelq_sdk.audit.proto.v1 import resource_change_log_custom_pb2 as edgelq__sdk_dot_audit_dot_proto_dot_v1_dot_resource__change__log__custom__pb2

GRPC_GENERATED_VERSION = '1.66.2'
GRPC_VERSION = grpc.__version__
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower
    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    raise RuntimeError(
        f'The grpc package installed is at version {GRPC_VERSION},'
        + f' but the generated code in edgelq_sdk/audit/proto/v1/resource_change_log_service_pb2_grpc.py depends on'
        + f' grpcio>={GRPC_GENERATED_VERSION}.'
        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
    )


class ResourceChangeLogServiceStub(object):
    """ResourceChangeLog service API for Audit
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.ListResourceChangeLogs = channel.unary_unary(
                '/ntt.audit.v1.ResourceChangeLogService/ListResourceChangeLogs',
                request_serializer=edgelq__sdk_dot_audit_dot_proto_dot_v1_dot_resource__change__log__custom__pb2.ListResourceChangeLogsRequest.SerializeToString,
                response_deserializer=edgelq__sdk_dot_audit_dot_proto_dot_v1_dot_resource__change__log__custom__pb2.ListResourceChangeLogsResponse.FromString,
                _registered_method=True)
        self.CreatePreCommittedResourceChangeLogs = channel.unary_unary(
                '/ntt.audit.v1.ResourceChangeLogService/CreatePreCommittedResourceChangeLogs',
                request_serializer=edgelq__sdk_dot_audit_dot_proto_dot_v1_dot_resource__change__log__custom__pb2.CreatePreCommittedResourceChangeLogsRequest.SerializeToString,
                response_deserializer=edgelq__sdk_dot_audit_dot_proto_dot_v1_dot_resource__change__log__custom__pb2.CreatePreCommittedResourceChangeLogsResponse.FromString,
                _registered_method=True)
        self.SetResourceChangeLogsCommitState = channel.unary_unary(
                '/ntt.audit.v1.ResourceChangeLogService/SetResourceChangeLogsCommitState',
                request_serializer=edgelq__sdk_dot_audit_dot_proto_dot_v1_dot_resource__change__log__custom__pb2.SetResourceChangeLogsCommitStateRequest.SerializeToString,
                response_deserializer=edgelq__sdk_dot_audit_dot_proto_dot_v1_dot_resource__change__log__custom__pb2.SetResourceChangeLogsCommitStateResponse.FromString,
                _registered_method=True)


class ResourceChangeLogServiceServicer(object):
    """ResourceChangeLog service API for Audit
    """

    def ListResourceChangeLogs(self, request, context):
        """ListResourceChangeLogs
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreatePreCommittedResourceChangeLogs(self, request, context):
        """CreatePreCommittedResourceChangeLogs
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetResourceChangeLogsCommitState(self, request, context):
        """SetResourceChangeLogsCommitState
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ResourceChangeLogServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'ListResourceChangeLogs': grpc.unary_unary_rpc_method_handler(
                    servicer.ListResourceChangeLogs,
                    request_deserializer=edgelq__sdk_dot_audit_dot_proto_dot_v1_dot_resource__change__log__custom__pb2.ListResourceChangeLogsRequest.FromString,
                    response_serializer=edgelq__sdk_dot_audit_dot_proto_dot_v1_dot_resource__change__log__custom__pb2.ListResourceChangeLogsResponse.SerializeToString,
            ),
            'CreatePreCommittedResourceChangeLogs': grpc.unary_unary_rpc_method_handler(
                    servicer.CreatePreCommittedResourceChangeLogs,
                    request_deserializer=edgelq__sdk_dot_audit_dot_proto_dot_v1_dot_resource__change__log__custom__pb2.CreatePreCommittedResourceChangeLogsRequest.FromString,
                    response_serializer=edgelq__sdk_dot_audit_dot_proto_dot_v1_dot_resource__change__log__custom__pb2.CreatePreCommittedResourceChangeLogsResponse.SerializeToString,
            ),
            'SetResourceChangeLogsCommitState': grpc.unary_unary_rpc_method_handler(
                    servicer.SetResourceChangeLogsCommitState,
                    request_deserializer=edgelq__sdk_dot_audit_dot_proto_dot_v1_dot_resource__change__log__custom__pb2.SetResourceChangeLogsCommitStateRequest.FromString,
                    response_serializer=edgelq__sdk_dot_audit_dot_proto_dot_v1_dot_resource__change__log__custom__pb2.SetResourceChangeLogsCommitStateResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'ntt.audit.v1.ResourceChangeLogService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('ntt.audit.v1.ResourceChangeLogService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class ResourceChangeLogService(object):
    """ResourceChangeLog service API for Audit
    """

    @staticmethod
    def ListResourceChangeLogs(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/ntt.audit.v1.ResourceChangeLogService/ListResourceChangeLogs',
            edgelq__sdk_dot_audit_dot_proto_dot_v1_dot_resource__change__log__custom__pb2.ListResourceChangeLogsRequest.SerializeToString,
            edgelq__sdk_dot_audit_dot_proto_dot_v1_dot_resource__change__log__custom__pb2.ListResourceChangeLogsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def CreatePreCommittedResourceChangeLogs(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/ntt.audit.v1.ResourceChangeLogService/CreatePreCommittedResourceChangeLogs',
            edgelq__sdk_dot_audit_dot_proto_dot_v1_dot_resource__change__log__custom__pb2.CreatePreCommittedResourceChangeLogsRequest.SerializeToString,
            edgelq__sdk_dot_audit_dot_proto_dot_v1_dot_resource__change__log__custom__pb2.CreatePreCommittedResourceChangeLogsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def SetResourceChangeLogsCommitState(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/ntt.audit.v1.ResourceChangeLogService/SetResourceChangeLogsCommitState',
            edgelq__sdk_dot_audit_dot_proto_dot_v1_dot_resource__change__log__custom__pb2.SetResourceChangeLogsCommitStateRequest.SerializeToString,
            edgelq__sdk_dot_audit_dot_proto_dot_v1_dot_resource__change__log__custom__pb2.SetResourceChangeLogsCommitStateResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
